version: '3.8'

services:
  # Frontend - Blockly UI
  blockly-ui:
    build:
      context: ./blockly
    ports:
      - "3000:3000"
    volumes:
      - ./blockly:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    depends_on:
      - api-server

  # API Server
  api-server:
    build:
      context: ./airflow/api
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./airflow/api:/app
      - ./airflow/dags:/opt/airflow/dags
    environment:
      - AIRFLOW_DAGS_FOLDER=/opt/airflow/dags
      - FLASK_ENV=development
    depends_on:
      - airflow-webserver

  # Airflow components
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5433:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  airflow-webserver:
    image: apache/airflow:2.6.0
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=lWZ0XO4Q4Vts7dY09xKR4-yGxUV9lzoQnK7s_L-i0m0=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/operators:/opt/airflow/operators
    ports:
      - "8080:8080"
    user: "${AIRFLOW_UID:-50000}:0"
    command: bash -c 'mkdir -p /opt/airflow/logs/scheduler /opt/airflow/logs/webserver /opt/airflow/logs/worker && airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && airflow webserver'
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.6.0
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=lWZ0XO4Q4Vts7dY09xKR4-yGxUV9lzoQnK7s_L-i0m0=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/operators:/opt/airflow/operators
    user: "${AIRFLOW_UID:-50000}:0"
    command: bash -c 'mkdir -p /opt/airflow/logs/scheduler && airflow scheduler'

  airflow-worker:
    image: apache/airflow:2.6.0
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=lWZ0XO4Q4Vts7dY09xKR4-yGxUV9lzoQnK7s_L-i0m0=
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/operators:/opt/airflow/operators
    user: "${AIRFLOW_UID:-50000}:0"
    command: bash -c 'mkdir -p /opt/airflow/logs/worker && airflow celery worker'

volumes:
  postgres-db-volume: